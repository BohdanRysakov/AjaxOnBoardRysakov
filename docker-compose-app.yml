version: '3.8'

services:
  app:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: "app"
    ports:
      - "8080:8080"
      - "9090:9090"
    depends_on:
      - mongo
      - kafka
      - zookeeper
      - redis

  kafka:
    image: confluentinc/cp-kafka:7.5.1
    ports:
      - "9092:9092"
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_LISTENERS: INTERNAL://kafka:29092, EXTERNAL://:9092
      KAFKA_ADVERTISED_LISTENERS: INTERNAL://kafka:29092, EXTERNAL://localhost:9092
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_INTER_BROKER_LISTENER_NAME: INTERNAL
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: INTERNAL:PLAINTEXT, EXTERNAL:PLAINTEXT
    depends_on:
      - zookeeper

  zookeeper:
    image: confluentinc/cp-zookeeper:7.5.1
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000

  schema-registry:
    image: confluentinc/cp-schema-registry:7.5.1
    ports:
      - "8081:8081"
    depends_on:
      - kafka
      - zookeeper
    environment:
      SCHEMA_REGISTRY_HOST_NAME: schema-registry
      SCHEMA_REGISTRY_KAFKASTORE_BOOTSTRAP_SERVERS: PLAINTEXT://kafka:29092

  mongo:
    image: mongo:6.0
    container_name: "mongodb"
    ports:
      - "27017:27017"

  nats:
    image: nats:2.9.23
    container_name: "nats"
    ports:
      - "4222:4222"

  redis:
    image: redis:alpine3.18
    ports:
      - "6379:6379"
